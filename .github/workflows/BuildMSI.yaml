name: Build and Release MSI

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper versioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # Adjust to your .NET version

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore dependencies
        run: dotnet restore

      - name: Get version from tag or input
        id: get_version
        run: |
          if ("${{ github.event_name }}" -eq "push") {
            $version = "${{ github.ref_name }}"
          } else {
            $version = "${{ github.event.inputs.version }}"
          }
          $version_number = $version -replace '^v', ''
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "version_number=$version_number" >> $env:GITHUB_OUTPUT
        shell: powershell

      - name: Build application
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:Version="${{ steps.get_version.outputs.version_number }}" -o ./publish/

      - name: Setup WiX Toolset
        run: |
          # Download and install WiX Toolset
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "wix.zip"
          Expand-Archive -Path "wix.zip" -DestinationPath "wix"
          echo "${{ github.workspace }}\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Create WiX source file
        run: |
          $wxsContent = @'
          <?xml version="1.0" encoding="UTF-8"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Product Id="*" 
                     Name="APKDrop" 
                     Language="1033" 
                     Version="${{ steps.get_version.outputs.version_number }}"
                     Manufacturer="APKDrop Team" 
                     UpgradeCode="12345678-1234-1234-1234-123456789012">
          
              <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" />
              <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
              <MediaTemplate EmbedCab="yes" />
          
              <Feature Id="ProductFeature" Title="APKDrop" Level="1">
                <ComponentGroupRef Id="ProductComponents" />
              </Feature>
          
              <Directory Id="TARGETDIR" Name="SourceDir">
                <Directory Id="ProgramFilesFolder">
                  <Directory Id="INSTALLFOLDER" Name="APKDrop" />
                </Directory>
                <Directory Id="ProgramMenuFolder">
                  <Directory Id="ApplicationProgramsFolder" Name="APKDrop"/>
                </Directory>
              </Directory>
          
              <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
                <Component Id="MainExecutable" Guid="*">
                  <File Id="MainExe" Source="publish\APKDrop.exe" KeyPath="yes">
                    <Shortcut Id="ApplicationStartMenuShortcut" 
                             Directory="ApplicationProgramsFolder" 
                             Name="APKDrop" 
                             WorkingDirectory="INSTALLFOLDER" 
                             Icon="ProductIcon" 
                             IconIndex="0" 
                             Advertise="yes" />
                  </File>
                </Component>
                <!-- Add more components for additional files -->
                <Component Id="ConfigFiles" Guid="*">
                  <File Id="AppConfig" Source="publish\APKDrop.dll.config" KeyPath="yes" />
                </Component>
              </ComponentGroup>
          
              <Icon Id="ProductIcon" SourceFile="publish\APKDrop.exe" />
              <Property Id="ARPPRODUCTICON" Value="ProductIcon" />
              <Property Id="ARPHELPLINK" Value="https://github.com/Ashp116/APKDrop" />
          
              <UI>
                <UIRef Id="WixUI_InstallDir" />
              </UI>
              <WixVariable Id="WixUILicenseRtf" Value="license.rtf" />
            </Product>
          </Wix>
          '@
          $wxsContent | Out-File -FilePath "APKDrop.wxs" -Encoding utf8
        shell: powershell

      - name: Create license file for installer
        run: |
          $licenseContent = @'
          {\rtf1\ansi\deff0 {\fonttbl {\f0 Times New Roman;}}
          \f0\fs20
          MIT License
          
          Copyright (c) 2024 APKDrop
          
          Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
          
          The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
          
          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
          }
          '@
          $licenseContent | Out-File -FilePath "license.rtf" -Encoding utf8
        shell: powershell

      - name: Build MSI
        run: |
          candle.exe -arch x64 APKDrop.wxs -out APKDrop.wixobj
          light.exe -ext WixUIExtension APKDrop.wixobj -out "APKDrop-${{ steps.get_version.outputs.version }}.msi"
        shell: powershell

      - name: Generate changelog
        id: changelog
        run: |
          $changelog = ""
          if (Test-Path "CHANGELOG.md") {
            # Extract changelog section for this version
            $content = Get-Content "CHANGELOG.md" -Raw
            $pattern = "## \[${{ steps.get_version.outputs.version_number }}\].*?(?=## \[|\z)"
            $match = [regex]::Match($content, $pattern, [System.Text.RegularExpressions.RegexOptions]::Singleline)
            if ($match.Success) {
              $changelog = $match.Value
            }
          }
          if ($changelog -eq "") {
            $changelog = "Release ${{ steps.get_version.outputs.version }}"
          }
          # Escape newlines and quotes for GitHub Actions
          $changelog = $changelog -replace "`r`n", "%0A" -replace "`n", "%0A" -replace '"', '\"'
          echo "changelog=$changelog" >> $env:GITHUB_OUTPUT
        shell: powershell

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: APKDrop ${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload MSI to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./APKDrop-${{ steps.get_version.outputs.version }}.msi
          asset_name: APKDrop-${{ steps.get_version.outputs.version }}.msi
          asset_content_type: application/octet-stream

      - name: Upload Portable Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/APKDrop.exe
          asset_name: APKDrop-${{ steps.get_version.outputs.version }}-portable.exe
          asset_content_type: application/octet-stream